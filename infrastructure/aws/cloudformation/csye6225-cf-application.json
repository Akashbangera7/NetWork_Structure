{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
      "KeyName": {
        "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
        "Default" : "centos",
        "Type": "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
      },
      "InstanceType": {
            "Description" : "WebServer EC2 instance type",
            "Type" : "String",
            "Default" : "t2.micro",
            "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
            "ConstraintDescription" : "must be a valid EC2 instance type."
      },
      "usernameRds" : {
        "Type" : "String",
        "Default" : "csye6225master"
      },
      "passwordRds" : {
        "Type" : "String",
        "Default" : "csye6225password"
      },
      "vpcId" : {
        "Type" : "String"
      },
      "subnet1" : {
        "Type" : "String"
      },
      "subnet2" : {
        "Type" : "String"
      },
      "subnet3" : {
        "Type" : "String"
      },
      "allocatedStorage" : {
        "Type" : "String",
        "Default" : "15"
      }
    },
    "Mappings" : {
      "AWSInstanceType2Arch" : {
        "t2.micro"    : { "Arch" : "HVM64"  }
      },
      "AWSInstanceType2NATArch" : {
        "t2.micro"    : { "Arch" : "NATHVM64"  }
      },
      "AWSRegionArch2AMI" : {
        "us-east-1"        : {"HVM64" : "ami-9887c6e7"}
      }
    },
    "Resources": {
    "webapp" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "vpcId" },
        "GroupDescription" : "Enable HTTP access via port 80",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"}
        ]
      }   
    },
    "rds": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties" : {
          "VpcId" : { "Ref" : "vpcId" },
          "GroupDescription": "Open database for access",
          "SecurityGroupIngress" : [{
            "IpProtocol" : "tcp",
            "FromPort" : "3306",
            "ToPort" : "3306",
            "SourceSecurityGroupId" : { "Ref" : "webapp" }
          }]
        }
    },
    "WebServerInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "SubnetId" : { "Ref" : "subnet1" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "KeyName"        : { "Ref" : "KeyName" },
        "SecurityGroupIds" : [{"Ref": "webapp"}],
        "UserData": {
          "Fn::Base64": {
              "Fn::Join": [
                  "\n",
                  [
                      "#!/bin/bash -xe ",
                      "yum install ruby ntp wget java-1.8.0-openjdk-devel -y",
                      "systemctl start ntpd",
                      "systemctl enable ntpd",
                      "cd /home/ec2-user",
                      "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install",
                      "chmod +x ./install",
                      "sudo ./install auto",
                      "groupadd tomcat",
                      "useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
                      "cd /tmp",
                      "wget http://apache.mirrors.pair.com/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.tar.gz",
                      "mkdir /opt/tomcat",
                      "tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
                      "cd /opt/tomcat",
                      "chgrp -R tomcat /opt/tomcat",
                      "chmod -R g+r conf",
                      "chmod g+x conf",
                      "chown -R tomcat webapps/ work/ temp/ logs/",
                      "cd /usr/lib/systemd/system",
                      "touch tomcat.service",
                      "echo '[Unit]' > tomcat.service",
                      "echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
                      "echo 'After=syslog.target network.target' >> tomcat.service",
                      "echo '[Service]' >> tomcat.service",
                      "echo 'Type=forking' >> tomcat.service",
                      "echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
                      "echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
                      "echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
                      "echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
                      "echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
                      "echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service",
                      "echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
                      "echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
                      "echo 'User=tomcat' >> tomcat.service",
                      "echo 'Group=tomcat' >> tomcat.service",
                      "echo 'UMask=0007' >> tomcat.service",
                      "echo 'RestartSec=10' >> tomcat.service",
                      "echo 'Restart=always' >> tomcat.service",
                      "echo '[Install]' >> tomcat.service",
                      "echo 'WantedBy=multi-user.target' >> tomcat.service",
                      "systemctl daemon-reload",
                      "#systemctl start cloudwatch.service",
                      "#systemctl enable cloudwatch.service",
                      "systemctl enable tomcat.service",
                      "systemctl start tomcat.service"
                  ]
              ]
          }
        },
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/sda1",
            "Ebs" : {
              "VolumeType" : "gp2",
              "DeleteOnTermination" : "true",
              "VolumeSize" : "20"
            }
          }
        ],
        "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join" :[ "-",[{"Ref" : "AWS::StackName"},"csye6225-webserverinstance"]]}}]
    }
  },
  "DynamoDBTable" : {
    "Type" : "AWS::DynamoDB::Table",
    "Properties" : {
      "AttributeDefinitions" : [
        {
          "AttributeName" : "id",
          "AttributeType" : "S"
        }
      ],
      "KeySchema" : [
        {
          "AttributeName" : "id",
          "KeyType" : "HASH"
        }
      ],
      "ProvisionedThroughput" : {
        "ReadCapacityUnits" : "5",
        "WriteCapacityUnits" : "5"
      },
      "TableName" : "csye6225"
    }
  },
  "awsbucket" :{
    "Type" : "AWS::S3::Bucket",
    "Properties" : {
      "BucketName" : "csye6225-fall2018-jainrishabh.me.csye6225.com"
    }
  }
  ,
  "myDBSubnetGroup" : {
    "Type" : "AWS::RDS::DBSubnetGroup",
    "Properties" : {
       "DBSubnetGroupDescription" : "description",
       "SubnetIds" : [{"Ref" : "subnet1"},{ "Ref" : "subnet2"}]
    }
 },
  "RDSInstance": {
    "Type" : "AWS::RDS::DBInstance",
    "Properties":{
      "AllocatedStorage" : { "Ref" : "allocatedStorage" },
      "BackupRetentionPeriod" : "0",
      "StorageType" : "gp2",
      "DBInstanceClass" : "db.t2.medium",
      "DBInstanceIdentifier" : "csye6225-fall2018",
      "Engine" : "MySQL",
      "EngineVersion" : "5.7.19",
      "MasterUsername" : { "Ref" : "usernameRds" },
      "MasterUserPassword" : { "Ref" : "passwordRds" },
      "DBName" : "csye6225",
      "MultiAZ" : "false",
      "PubliclyAccessible" : "false",
      "DBSubnetGroupName" : {"Ref" : "myDBSubnetGroup"},
      "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join" :[ "-",[{"Ref" : "AWS::StackName"},"csye6225-rds-instance"]]}}]
    }
  }
    },
    "Outputs": {
      "InstanceId": {
          "Description": "InstanceId of the newly created EC2 instance",
          "Value": {
              "Ref": "WebServerInstance"
          }
      },
      "AZ": {
          "Description": "Availability Zone of the newly created EC2 instance",
          "Value": {
              "Fn::GetAtt": [
                  "WebServerInstance",
                  "AvailabilityZone"
              ]
          }
      },
      "PublicDNS": {
          "Description": "Public DNSName of the newly created EC2 instance",
          "Value": {
              "Fn::GetAtt": [
                  "WebServerInstance",
                  "PublicDnsName"
              ]
          }
      },
      "PublicIP": {
          "Description": "Public IP address of the newly created EC2 instance",
          "Value": {
              "Fn::GetAtt": [
                  "WebServerInstance",
                  "PublicIp"
              ]
          }
      }
}
  }
